name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-chain:
    runs-on: [ubuntu-latest]
    steps:
    -
        name: "Check Runner CPU, Mem, Drv, Net"
        run: |
          echo "########## MACHINE ARCH ############"
          uname -m
          echo "########### RUNNER CPU #############"
          lscpu
          echo "########### RUNNER RAM #############"
          free -h
          echo "########### RUNNER DRV #############"
          df -h
          echo "######### RUNNER NETWORK ###########"
          ip addr
    -
      name: "Ubuntu update"
      run: |
        sudo apt update
        sudo apt install check autopoint flex help2man nodejs libboost-all-dev locate libtool automake autoconf nasm pkgconf
        npm install -g bats
    -
      name: "Build colm, COmputer Language Machinery"
      run: |
        git clone https://github.com/adrian-thurston/colm.git
        cd colm && ./autogen.sh && ./configure && make && sudo make install
        which colm && whereis colm ## && locate colm
    -
      name: "Build Ragel State Machine Compiler"
      run: |
        which colm && whereis colm ## && locate colm
        git clone https://github.com/adrian-thurston/ragel.git
        cd ragel && ./autogen.sh && ./configure --with-colm=/usr/local && make && make install
    -
      name: "hyperscan, high performance regular expression matching library"
      run: |
        git clone --recurse-submodules --branch=v5.4.2 --depth=1 https://github.com/intel/hyperscan.git
        cd hyperscan && cmake -Wno-dev -G "Unix Makefiles" && ls -l
    -
      name: "libpcap, framework for low-level network monitoring"
      run: |
        git clone --recurse-submodules --branch=libpcap-1.10.4 --depth=1 https://github.com/the-tcpdump-group/libpcap
        cd libpcap && ./configure && make -j && sudo make install && make clean
    -
      name: "libDAQ, the Data AcQuisition Library"
      run: |
        git clone --recurse-submodules --branch=v3.0.12 --depth=1 https://github.com/snort3/libdaq.git
        WORKDIR=${{ github.workspace }}/libdaq
        cd $WORKDIR && ./bootstrap && ./configure && make -j && sudo make install && make clean
    -
      name: "libdnet, the interface to several low-level networking routines"
      run: |
        git clone --recurse-submodules --branch=libdnet-1.16.4 --depth=1 https://github.com/ofalk/libdnet.git
        cd libdnet && ./configure && make -j && sudo make install && make clean
    -
      name: "flex, the fast lexical analyzer generator"
      run: |
        git clone --recurse-submodules --branch=v2.6.4 --depth=1 https://github.com/westes/flex.git
        cd flex && ./autogen.sh && ./configure && make -j check && sudo make install && make clean
    -
      name: "hwloc, discovering hardware resources in parallel architectures."
      run: |
        git clone --recurse-submodules --branch=hwloc-2.9.2 --depth=1 https://github.com/open-mpi/hwloc.git
        cd hwloc && ./autogen.sh && ./configure && make -j && sudo make install && make clean
    -
      name: "LuaJIT is a Just-In-Time (JIT) compiler for the Lua programming language."
      run: |
        git clone --recurse-submodules --branch=v2.1.ROLLING --depth=1 https://github.com/LuaJIT/LuaJIT.git
        cd LuaJIT && make -j && sudo make install && make clean
    -
      name: "PCRE2, Perl-Compatible Regular Expressions"
      run: |
        git clone --recurse-submodules --branch=pcre2-10.42 --depth=1 https://github.com/PCRE2Project/pcre2.git
        cd pcre2 && ./autogen.sh && ./configure && make -j && sudo make install && make clean
    - 
      name: "snort3, the next generation Snort IPS (Intrusion Prevention System)"
      run: |
        git clone --recurse-submodules --depth=1 https://github.com/snort3/snort3.git
        cd snort3 && ./configure_cmake.sh && cd build && make -j 4 && sudo make install && make clean
        sudo ln -s /usr/local/snort/lib/pkgconfig/snort.pc /usr/lib/pkgconfig/snort.pc
    - 
      name: "Snort++ Extras"
      run: |
        git clone --recurse-submodules --depth=1 https://github.com/snort3/snort3_extra.git
        cd snort3_extra && ./configure_cmake.sh && cd build && make -j 4 && sudo make install && make clean
    -
      name: "Run Demo Tests"
      run: |
        git clone --recurse-submodules --depth=1 https://github.com/snort3/snort3_demo.git
        export LD_LIBRARY_PATH=/usr/local/lib
        sudo ldconfig
        cd snort3_demo && ./run_test.sh /usr/local/snort
